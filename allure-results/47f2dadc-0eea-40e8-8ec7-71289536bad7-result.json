{"name": "test_update_my_profile", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome=136.0.7103.113)\nStacktrace:\n#0 0x5c76b0b9771a <unknown>\n#1 0x5c76b063a0a0 <unknown>\n#2 0x5c76b0631177 <unknown>\n#3 0x5c76b0622199 <unknown>\n#4 0x5c76b0623e8d <unknown>\n#5 0x5c76b062252e <unknown>\n#6 0x5c76b0621ece <unknown>\n#7 0x5c76b0621ba2 <unknown>\n#8 0x5c76b061f9ef <unknown>\n#9 0x5c76b06201aa <unknown>\n#10 0x5c76b063d5d9 <unknown>\n#11 0x5c76b06d7eb5 <unknown>\n#12 0x5c76b06b13a2 <unknown>\n#13 0x5c76b06d72a0 <unknown>\n#14 0x5c76b06b1173 <unknown>\n#15 0x5c76b067dd4b <unknown>\n#16 0x5c76b067e9b1 <unknown>\n#17 0x5c76b0b5c8cb <unknown>\n#18 0x5c76b0b607ca <unknown>\n#19 0x5c76b0b44622 <unknown>\n#20 0x5c76b0b61354 <unknown>\n#21 0x5c76b0b2945f <unknown>\n#22 0x5c76b0b854f8 <unknown>\n#23 0x5c76b0b856d6 <unknown>\n#24 0x5c76b0b96586 <unknown>\n#25 0x719d5469caa4 <unknown>\n#26 0x719d54729c3c <unknown>", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"48fcf00017e63a8818191927285f5dfe\")>\n\n    def test_update_my_profile(driver):\n        # Step 1: Login\n>       driver.get(\"https://app.webnexs.net/login\")\n\nmyprofile/account.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:472: in get\n    self.execute(Command.GET, {\"url\": url})\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7eac3a389130>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_NAME_NOT_RESOLVED\\\\n  (...\\\\n#24 0x5c76b0b96586 \\\\u003Cunknown>\\\\n#25 0x719d5469caa4 \\\\u003Cunknown>\\\\n#26 0x719d54729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\nE         (Session info: chrome=136.0.7103.113)\nE       Stacktrace:\nE       #0 0x5c76b0b9771a <unknown>\nE       #1 0x5c76b063a0a0 <unknown>\nE       #2 0x5c76b0631177 <unknown>\nE       #3 0x5c76b0622199 <unknown>\nE       #4 0x5c76b0623e8d <unknown>\nE       #5 0x5c76b062252e <unknown>\nE       #6 0x5c76b0621ece <unknown>\nE       #7 0x5c76b0621ba2 <unknown>\nE       #8 0x5c76b061f9ef <unknown>\nE       #9 0x5c76b06201aa <unknown>\nE       #10 0x5c76b063d5d9 <unknown>\nE       #11 0x5c76b06d7eb5 <unknown>\nE       #12 0x5c76b06b13a2 <unknown>\nE       #13 0x5c76b06d72a0 <unknown>\nE       #14 0x5c76b06b1173 <unknown>\nE       #15 0x5c76b067dd4b <unknown>\nE       #16 0x5c76b067e9b1 <unknown>\nE       #17 0x5c76b0b5c8cb <unknown>\nE       #18 0x5c76b0b607ca <unknown>\nE       #19 0x5c76b0b44622 <unknown>\nE       #20 0x5c76b0b61354 <unknown>\nE       #21 0x5c76b0b2945f <unknown>\nE       #22 0x5c76b0b854f8 <unknown>\nE       #23 0x5c76b0b856d6 <unknown>\nE       #24 0x5c76b0b96586 <unknown>\nE       #25 0x719d5469caa4 <unknown>\nE       #26 0x719d54729c3c <unknown>\n\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: WebDriverException"}, "start": 1748419924569, "stop": 1748419926024, "uuid": "5084e142-3ca0-4344-a727-44452d5f4ea4", "historyId": "a53c958fd90f9a1f5110d0f0a140b914", "testCaseId": "a53c958fd90f9a1f5110d0f0a140b914", "fullName": "myprofile.account#test_update_my_profile", "labels": [{"name": "parentSuite", "value": "myprofile"}, {"name": "suite", "value": "account"}, {"name": "host", "value": "ruban"}, {"name": "thread", "value": "6901-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "myprofile.account"}]}